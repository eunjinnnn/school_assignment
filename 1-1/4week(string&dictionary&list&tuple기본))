#string 기본함수
sentence="hello world"
word=' apple '

print(sentence.count('l')) #해당 문자 쓰인 횟수
print(sentence.find('l')) # 해당 문자가 처음으로 쓰인 인덱스 번호
print(sentence.index('l')) #해당 문자의 처음으로 쓰인 인덱스 번호

a=' '.join('apple') #사이사이에 공백 넣기
print(a)
print(a.split(' ')) # 공백을 기준으로 나눈 후 list로 반환

b=sentence.upper() #모두 대문자로
print(b)
print(b.lower()) #모두 소문자로

print(word.rstrip()) #오른쪽 공백 제거
print(word.lstrip()) #왼쪽 공백 제거
print(word.strip()) #양쪽 공백 제거
#추가(양쪽 공백 제거하는 다른방법)
print(word.replace(" ",""))

print(sentence.replace('world','friend')) # world를 friend로 대체


#list 기본함수
list = [1,3,2,4,5,6]

list.append(6) #리스트 끝에 추가
print(list)

list.sort() #오름차순 정렬
print(list)

list.reverse() #반대로
print(list)

print(list.index(2)) #인덱스 번호에 해당하는 값 반환

list.insert(2,7) #인덱스 번호 2 자리에 7 대입
print(list)

list.remove(1) #1제거
print(list)

print(list.pop()) # 맨 마지막 값 반환 후 리스트에서 삭제
print(list)

print(list.count(6)) #6의 개수 반환

a = ['a','b']
list.extend(a) #리스트 끝에 a 리스트 합침
print(list)


#dictionary 기본함수
numbers={'1':'one','2':'two','3':'three'}
print(numbers.keys()) #key반환
print(numbers.values()) #value반환
print(numbers.items()) #key와 value를 tuple형태로 묶어 반환
print(numbers.get('1')) #key값이 1인 것의 value 반환
print('1' in numbers) #key값이 1인 것의 value 반환
print(numbers.clear()) #전부 제거
numbers.update({'4':'four'}) #새로운 key와 value등록
print(numbers['4'])


#tuple의 활용
tuplex = ("w", 3, "r", "s", "o", "u", "c", "e")
B= list(tuplex)
B.remove("r") #tuple은 추가, 삽입, 삭제 불가하므로 list형으로 바꾼 후 변환 가능
C=tuple(B)
print(C)

